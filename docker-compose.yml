version: '3.1'
services:
  database-tweet:
    container_name: database-tweet
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'tweet_database'
      MYSQL_USER: 'tweet_user'
      MYSQL_PASSWORD: 'brtwcvv1'
      MYSQL_ROOT_PASSWORD: 'brtwcvv1'
    ports:
      - '3306:3306'
    volumes:
      - my-db-tweet:/var/lib/mysql
  database-user:
    container_name: database-user
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'user_database'
      MYSQL_USER: 'jjeanjacques'
      MYSQL_PASSWORD: 'brtwcvv1'
      MYSQL_ROOT_PASSWORD: 'brtwcvv1'
    ports:
      - '3307:3306'
    volumes:
      - my-db-user:/var/lib/mysql
  dynamodb-local:
    image: localstack/localstack:latest
    restart: always
    environment:
      - AWS_DEFAULT_REGION=us-west-1
      - EDGE_PORT=4566
      - SERVICES=dynamodb
      - KINESIS_PROVIDER=kinesalite
    ports:
      - '4566:4566'
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb-local:4566"
      AWS_REGION: "us-west-1"
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    depends_on:
      - dynamodb-local
  redis-timeline:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - my-db-timeline:/data

volumes:
  my-db-tweet:
  my-db-user:
  my-db-timeline: